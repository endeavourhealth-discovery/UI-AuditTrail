{"version":3,"file":"dds-angular8.js","sources":["ng://dds-angular8/lib/layout/menuProvider.service.ts","ng://dds-angular8/lib/security/access-denied/access-denied.component.ts","ng://dds-angular8/lib/user-manager/user-manager.service.ts","ng://dds-angular8/lib/logger/logger.service.ts","ng://dds-angular8/lib/security/can-activate-route.guard.ts","ng://dds-angular8/lib/layout/layout.component.ts","ng://dds-angular8/lib/layout/layout.module.ts","ng://dds-angular8/lib/layout/models/MenuOption.ts","ng://dds-angular8/lib/security/security.module.ts","ng://dds-angular8/lib/logger/logger.module.ts","ng://dds-angular8/lib/user-manager/user-project-http-interceptor.ts","ng://dds-angular8/lib/user-manager/user-manager.module.ts","ng://dds-angular8/lib/core/state.service.ts","ng://dds-angular8/lib/core/core.module.ts"],"sourcesContent":["import {MenuOption} from './models/MenuOption';\r\n\r\nexport abstract class AbstractMenuProvider {\r\n  abstract getClientId(): string;\r\n\r\n  abstract getMenuOptions(): MenuOption[];\r\n\r\n  abstract getApplicationTitle(): string;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'dds-access-denied',\r\n  templateUrl: './access-denied.component.html',\r\n  styleUrls: ['./access-denied.component.css']\r\n})\r\nexport class AccessDeniedComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {UserProject} from './models/UserProject';\r\nimport {UserProfile} from './models/UserProfile';\r\nimport {Observable, ReplaySubject} from 'rxjs';\r\nimport {HttpClient, HttpParams} from '@angular/common/http';\r\nimport {Region} from './models/Region';\r\nimport {KeycloakService} from 'keycloak-angular';\r\nimport {UserOrganisationProject} from './models/UserOrganisationProject';\r\nimport {ApplicationPolicyAttribute} from './models/ApplicationPolicyAttribute';\r\nimport {AbstractMenuProvider} from '../layout/menuProvider.service';\r\n\r\n@Injectable()\r\nexport class UserManagerService {\r\n  private readonly _keycloakUserId: string;\r\n  private _userProfile: UserProfile;\r\n  private _userProjects: UserProject[];\r\n  private _selectedProject: UserProject;\r\n\r\n  public onProjectChange: ReplaySubject<UserProject> = new ReplaySubject<UserProject>(1);\r\n\r\n  constructor(private http: HttpClient,\r\n              private keycloakService: KeycloakService,\r\n              private menuProvider: AbstractMenuProvider) {\r\n    this._keycloakUserId = keycloakService.getKeycloakInstance().idTokenParsed.sub;\r\n  }\r\n\r\n  getUserProfile(force: boolean = false): Promise<UserProfile> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._userProfile && !force)\r\n        resolve(this._userProfile);\r\n      else {\r\n        this.loadUserProfile().subscribe(\r\n          (profile) => resolve(this._userProfile = profile),\r\n          (error) => reject(error)\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  getUserProjects(force: boolean = false): Promise<UserProject[]> {\r\n    return new Promise((resolve, reject) => {\r\n      if (this._userProjects && !force)\r\n        resolve(this._userProjects);\r\n      else {\r\n        this.loadUserProjects().subscribe(\r\n          (projects) => {\r\n            this.setUserProjects(projects);\r\n            resolve(projects);\r\n          },\r\n          (error) => reject(error)\r\n        )\r\n      }\r\n    });\r\n  }\r\n\r\n  getSelectedProject(): UserProject {\r\n    return this._selectedProject;\r\n  }\r\n\r\n  setSelectedProject(newProject: UserProject) {\r\n    this.onProjectChange.next(newProject);\r\n    this._selectedProject = newProject;\r\n  }\r\n\r\n  getUserRegion(): Region {\r\n    return this._userProfile.region;\r\n  }\r\n\r\n  changeDefaultProject(defaultProject: string, userProjectId: string): Observable<string> {\r\n    const vm = this;\r\n    let params = new HttpParams();\r\n    params = params.append('userId', this._keycloakUserId);\r\n    params = params.append('defaultProjectId', defaultProject);\r\n    params = params.append('userProjectId', userProjectId);\r\n    return vm.http.get('api/userManager/setDefaultProject', {params: params, responseType: 'text'});\r\n  }\r\n\r\n  checkRoleAccess(role : string) : Promise<boolean>  {\r\n\r\n    return new Promise((resolve, reject) => {\r\n      if (role == null || role == '')\r\n        resolve(true);\r\n      else {\r\n        let authorised = false;\r\n        let application = this.menuProvider.getApplicationTitle();\r\n\r\n        this.getUserProfile().then(\r\n          () => {\r\n            this.getUserProjects().then(\r\n              () => {\r\n                let org: UserOrganisationProject = this._userProfile.organisationProjects.find(x => x.organisation.uuid == this._selectedProject.organisationId);\r\n\r\n                if (org != null) {\r\n                  let attributes: ApplicationPolicyAttribute[] = org.projects.find(y => y.uuid == this._selectedProject.projectId).applicationPolicyAttributes;\r\n                  if (attributes != null) {\r\n                    let appAttributes = attributes.filter(x => x.application == application);\r\n                    if (appAttributes != null)\r\n                      authorised = appAttributes.find(x => x.applicationAccessProfileName == role) != null;\r\n                  }\r\n                }\r\n                resolve(authorised);\r\n              },\r\n              (error) => reject(error)\r\n            )\r\n          },\r\n          (error) => reject(error)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  logout() {\r\n    this.keycloakService.logout();\r\n  }\r\n\r\n  private loadUserProfile(): Observable<UserProfile> {\r\n    const vm = this;\r\n    let params = new HttpParams();\r\n    params = params.append('userId', this._keycloakUserId);\r\n    return vm.http.get<UserProfile>('api/userManager/getUserProfile', {params: params});\r\n  }\r\n\r\n  private loadUserProjects(): Observable<UserProject[]> {\r\n    const vm = this;\r\n    let params = new HttpParams();\r\n    params = params.append('userId', this._keycloakUserId);\r\n    return vm.http.get<UserProject[]>('api/userManager/getProjects', {params: params});\r\n  }\r\n\r\n  private setUserProjects(projects: UserProject[]) {\r\n    this._userProjects = projects;\r\n    let def = projects.find(p => p.default);\r\n    if (def == null && projects.length > 0)\r\n      def = projects[0];\r\n    this.setSelectedProject(def);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material/snack-bar';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggerService {\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  info(message: string) {\r\n    console.info(message);\r\n    this.snackBar.open(message, null, {duration: 3000, panelClass: 'logger-info', horizontalPosition: 'right'});\r\n  }\r\n\r\n  success(message: string) {\r\n    console.log(message);\r\n    this.snackBar.open(message, null, {duration: 3000, panelClass: 'logger-success', horizontalPosition: 'right'});\r\n  }\r\n\r\n  error(message: string) {\r\n    console.error(message);\r\n    this.snackBar.open(message, null, {duration: 3000, panelClass: 'logger-error', horizontalPosition: 'right'});\r\n  }\r\n\r\n  debug(message: string) {\r\n    console.debug(message);\r\n  }\r\n\r\n  trace(message: string) {\r\n    console.trace(message);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, Routes} from '@angular/router';\r\nimport { KeycloakAuthGuard, KeycloakService } from 'keycloak-angular';\r\nimport {AccessDeniedComponent} from './access-denied/access-denied.component';\r\nimport {UserManagerService} from '../user-manager/user-manager.service';\r\nimport {LoggerService} from '../logger/logger.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CanActivateRouteGuard extends KeycloakAuthGuard implements CanActivate {\r\n  static secureRoutes(router: Router) {\r\n    let routes : Routes = router.config;\r\n    routes = routes.map(r => { r.canActivate = [CanActivateRouteGuard]; return r;});\r\n    routes.push({path: 'unauthorised', component : AccessDeniedComponent });\r\n    router.resetConfig(routes);\r\n  }\r\n\r\n  private _role: string;\r\n  private _url: string;\r\n  private _unauthorised: boolean = false;\r\n\r\n  constructor(protected router: Router,\r\n              protected keycloakAngular: KeycloakService,\r\n              protected userManagerService: UserManagerService,\r\n              protected log: LoggerService) {\r\n    super(router, keycloakAngular);\r\n  }\r\n\r\n  isAccessAllowed(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise<boolean> {\r\n    // First check we are logged in\r\n    return new Promise((resolve, reject) => {\r\n      if (!this.authenticated) {\r\n        this.keycloakAngular.login()\r\n          .catch(e => this.log.error(e));\r\n        return reject('Not logged in');\r\n      }\r\n\r\n      if (!state.url.endsWith('unauthorised')) {\r\n        this._role = route.data.role;\r\n        this._url = state.url;\r\n      }\r\n\r\n      this.checkRoleAccess(route.data.role).then(\r\n        (authorised) => resolve(authorised),\r\n        (error) => reject(error)\r\n      );\r\n    });\r\n  }\r\n\r\n  checkRoleAccess(role: string): Promise<boolean>  {\r\n    return new Promise((resolve, reject) => {\r\n      this.userManagerService.checkRoleAccess(role).then(\r\n        (authorised) => {\r\n          if (!authorised) {\r\n            this._unauthorised = true;\r\n            this.router.navigate(['/unauthorised']);\r\n          } else if (this._unauthorised) {\r\n            this._unauthorised = false;\r\n            this.router.navigate([this._url]);\r\n          }\r\n\r\n          resolve(authorised);\r\n        },\r\n        (error) => reject(error)\r\n      )\r\n    });\r\n  }\r\n\r\n  checkCurrentAccess(): Promise<boolean> {\r\n    return this.checkRoleAccess(this._role);\r\n  }\r\n}\r\n\r\n","import {Component, HostBinding, OnInit} from '@angular/core';\r\nimport {AbstractMenuProvider} from './menuProvider.service';\r\nimport {OverlayContainer} from '@angular/cdk/overlay';\r\nimport {MenuOption} from './models/MenuOption';\r\nimport {Route, Router} from '@angular/router';\r\nimport {CanActivateRouteGuard} from '../security/can-activate-route.guard';\r\nimport {UserProfile} from '../user-manager/models/UserProfile';\r\nimport {UserProject} from '../user-manager/models/UserProject';\r\nimport {UserManagerService} from '../user-manager/user-manager.service';\r\nimport {LoggerService} from '../logger/logger.service';\r\nimport {UserOrganisationProject} from '../user-manager/models/UserOrganisationProject';\r\nimport {ApplicationPolicyAttribute} from '../user-manager/models/ApplicationPolicyAttribute';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './layout.component.html',\r\n  styleUrls: ['./layout.component.scss']\r\n})\r\nexport class LayoutComponent implements OnInit {\r\n  @HostBinding('class') componentCssClass;\r\n\r\n  open = false;\r\n  pinned = false;\r\n  pinIcon = 'radio_button_unchecked';\r\n\r\n  title = '';\r\n  user: UserProfile;\r\n  userProjects: UserProject[];\r\n  currentProject: UserProject;\r\n\r\n  menuItems: MenuOption[] = [];\r\n\r\n  constructor(private menuService: AbstractMenuProvider,\r\n              private userManagerService: UserManagerService,\r\n              private router: Router,\r\n              public overlayContainer: OverlayContainer,\r\n              private routeGuard: CanActivateRouteGuard,\r\n              private log: LoggerService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    CanActivateRouteGuard.secureRoutes(this.router);\r\n    this.title = this.menuService.getApplicationTitle();\r\n    this.menuItems = this.menuService.getMenuOptions();\r\n    this.setMenuOptionAccess();\r\n\r\n    this.getUserProfile();\r\n\r\n    this.userManagerService.onProjectChange.subscribe(\r\n      (newProject) => this.onProjectChange(newProject),\r\n      (error) => this.log.error(error)\r\n    );\r\n  }\r\n\r\n  setMenuOptionAccess() {\r\n    let routes: Route[] = this.router.config;\r\n    for (let menuOption of this.menuItems) {\r\n      let route = routes.find(r => r.path == menuOption.state);\r\n      this.routeGuard.checkRoleAccess(route.data.role).then(\r\n        (access) => menuOption.access = access,\r\n        (error) => this.log.error(error)\r\n      );\r\n    }\r\n  }\r\n\r\n  onProjectChange(project: UserProject) {\r\n    this.currentProject = project;\r\n    this.routeGuard.checkCurrentAccess();\r\n    this.setMenuOptionAccess();\r\n  }\r\n\r\n  getUserProfile(force: boolean = false) {\r\n    this.userManagerService.getUserProfile(force)\r\n      .then(\r\n        (profile) => this.setUserProfile(profile, force),\r\n        (error) => this.log.error(error)\r\n      );\r\n  }\r\n\r\n  setUserProfile(profile: UserProfile, force: boolean = false) {\r\n    this.user = profile;\r\n    this.userManagerService.getUserProjects(force)\r\n      .then(\r\n        (projects) => this.userProjects = projects,\r\n        (error) => this.log.error(error)\r\n      )\r\n  }\r\n\r\n  expand() {\r\n    this.open = true;\r\n  }\r\n\r\n  collapse() {\r\n    this.open = false;\r\n  }\r\n\r\n  togglePin() {\r\n    this.pinned = !this.pinned;\r\n    this.pinIcon = (this.pinned) ? 'radio_button_checked' : 'radio_button_unchecked';\r\n  }\r\n\r\n  logout() {\r\n    this.userManagerService.logout();\r\n  }\r\n\r\n  onSetTheme(theme) {\r\n    this.overlayContainer.getContainerElement().classList.add(theme);\r\n    this.componentCssClass = theme;\r\n  }\r\n\r\n  switchProject(project: UserProject) {\r\n    let org : UserOrganisationProject = this.user.organisationProjects.find(x => x.organisation.uuid == project.organisationId);\r\n\r\n    let attributes: ApplicationPolicyAttribute[] = org.projects.find(y => y.uuid == project.projectId).applicationPolicyAttributes;\r\n    let appAttributes = attributes.filter(x => x.application == this.title);\r\n    project.applicationPolicyAttributes = appAttributes;\r\n    console.log('switching prohjects', project);\r\n    this.userManagerService.setSelectedProject(project);\r\n  }\r\n\r\n  setDefault(project: UserProject) {\r\n    this.userManagerService.changeDefaultProject(project.id, this.userManagerService.getSelectedProject().id).subscribe(\r\n      (ok) => this.getUserProfile(true),\r\n      (error) => this.log.error(error)\r\n    );\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LayoutComponent } from './layout.component';\r\nimport {\r\n  MatBadgeModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatRadioModule,\r\n  MatSidenavModule,\r\n  MatSlideToggleModule, MatToolbarModule\r\n} from '@angular/material';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {RouterModule} from '@angular/router';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    CommonModule,\r\n    MatSidenavModule,\r\n    MatRadioModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatSlideToggleModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    RouterModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatBadgeModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  declarations: [\r\n    LayoutComponent\r\n  ],\r\n  entryComponents: [\r\n    LayoutComponent\r\n  ]\r\n})\r\nexport class LayoutModule { }\r\n","export class MenuOption {\r\n\tcaption:string;\r\n\tstate:string;\r\n\ticon:string;\r\n\tbadge?:string;\r\n\taccess?: boolean;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {CanActivateRouteGuard} from './can-activate-route.guard';\r\nimport { AccessDeniedComponent } from './access-denied/access-denied.component';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCardModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [\r\n    CanActivateRouteGuard\r\n  ],\r\n  declarations: [AccessDeniedComponent],\r\n  entryComponents: [AccessDeniedComponent]\r\n})\r\nexport class SecurityModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {LoggerService} from './logger.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [LoggerService]\r\n})\r\nexport class LoggerModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport {UserManagerService} from './user-manager.service';\r\n\r\n@Injectable()\r\nexport class UserProjectHttpInterceptor implements HttpInterceptor {\r\n  constructor(private userManagerService: UserManagerService) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    let activeProject = this.userManagerService.getSelectedProject();\r\n    if (activeProject && activeProject.projectId) {\r\n      request = request.clone({\r\n        setHeaders: {\r\n          userProjectId: activeProject.id\r\n        }\r\n      });\r\n    }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {UserManagerService} from \"./user-manager.service\";\r\nimport {HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport {UserProjectHttpInterceptor} from './user-project-http-interceptor';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [],\r\n    providers: [\r\n        UserManagerService,\r\n      {\r\n        provide: HTTP_INTERCEPTORS,\r\n        useClass: UserProjectHttpInterceptor,\r\n        multi: true\r\n      }\r\n    ]\r\n})\r\nexport class UserManagerModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StateService {\r\n  states: any = {};\r\n  constructor() { }\r\n\r\n  get(id: string): any {\r\n    return this.states[id];\r\n  }\r\n\r\n  set(id: string, data: any) {\r\n    this.states[id] = data;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {StateService} from './state.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  providers: [StateService]\r\n})\r\nexport class CoreModule { }\r\n"],"names":["MatIconModule"],"mappings":"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"}